#pragma version 8
intcblock 0 1 65536 100000 200 500000
bytecblock 0x 0x675f636f756e746572 0x151f7c75 0x675f666565 0x00
txn NumAppArgs
intc_0 // 0
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x95a6907e // "init_profile(pay,string,string,(string,string)[])bool"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x0d14922b // "update_profile(string,(string,string)[])(string,string,(string,string)[])"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x569e7f41 // "get_profile(address)(string,string,(string,string)[])"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0xe23f5056 // "remove_profile()bool"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x571bf70a // "update_fee(uint64)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x02bece11 // "hello(string)string"
==
bnz main_l8
err
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub hellocaster_15
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updatefeecaster_14
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub removeprofilecaster_13
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getprofilecaster_12
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updateprofilecaster_11
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub initprofilecaster_10
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l20
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l19
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l18
err
main_l18:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_7
intc_1 // 1
return
main_l19:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_6
intc_1 // 1
return
main_l20:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_1 // "g_counter"
intc_0 // 0
app_global_put
bytec_3 // "g_fee"
pushint 1000000 // 1000000
app_global_put
retsub

// init_profile
initprofile_1:
proto 4 1
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
txn Sender
box_len
store 1
store 0
load 1
!
// Initialized
assert
frame_dig -4
gtxns Sender
txn Sender
==
assert
frame_dig -4
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -4
gtxns Amount
bytec_3 // "g_fee"
app_global_get
==
// payment must be for >= (app_global_get (utf8 bytes: "g_fee"))
assert
bytec_1 // "g_counter"
bytec_1 // "g_counter"
app_global_get
intc_1 // 1
+
app_global_put
frame_dig -3
extract 2 0
len
pushint 15 // 15
<=
assert
frame_dig -2
extract 2 0
len
intc 4 // 200
<=
assert
frame_dig -3
frame_bury 6
frame_dig 6
frame_bury 5
pushint 6 // 6
frame_bury 3
frame_dig 3
frame_dig 6
len
+
frame_bury 4
frame_dig 4
intc_2 // 65536
<
assert
frame_dig 3
itob
extract 6 0
frame_dig -2
frame_bury 6
frame_dig 5
frame_dig 6
concat
frame_bury 5
frame_dig 4
frame_bury 3
frame_dig 3
frame_dig 6
len
+
frame_bury 4
frame_dig 4
intc_2 // 65536
<
assert
frame_dig 3
itob
extract 6 0
concat
frame_dig -1
frame_bury 6
frame_dig 5
frame_dig 6
concat
frame_bury 5
frame_dig 4
frame_bury 3
frame_dig 3
itob
extract 6 0
concat
frame_dig 5
concat
frame_bury 2
txn Sender
box_del
pop
txn Sender
frame_dig 2
box_put
intc_1 // 1
!
!
frame_bury 0
retsub

// update_profile
updateprofile_2:
proto 2 1
bytec_0 // ""
dupn 3
intc_0 // 0
dup
bytec_0 // ""
dup
txn Sender
box_len
store 3
store 2
load 3
// Not Exist
assert
frame_dig -2
extract 2 0
len
intc 4 // 200
<=
assert
txn Sender
box_get
store 5
store 4
load 5
assert
load 4
frame_bury 2
frame_dig 2
frame_dig 2
intc_0 // 0
extract_uint16
frame_dig 2
pushint 2 // 2
extract_uint16
substring3
frame_bury 3
frame_dig 3
frame_bury 7
frame_dig 7
frame_bury 6
pushint 6 // 6
frame_bury 4
frame_dig 4
frame_dig 7
len
+
frame_bury 5
frame_dig 5
intc_2 // 65536
<
assert
frame_dig 4
itob
extract 6 0
frame_dig -2
frame_bury 7
frame_dig 6
frame_dig 7
concat
frame_bury 6
frame_dig 5
frame_bury 4
frame_dig 4
frame_dig 7
len
+
frame_bury 5
frame_dig 5
intc_2 // 65536
<
assert
frame_dig 4
itob
extract 6 0
concat
frame_dig -1
frame_bury 7
frame_dig 6
frame_dig 7
concat
frame_bury 6
frame_dig 5
frame_bury 4
frame_dig 4
itob
extract 6 0
concat
frame_dig 6
concat
frame_bury 2
txn Sender
box_del
pop
txn Sender
frame_dig 2
box_put
txn Sender
box_get
store 7
store 6
load 7
assert
load 6
frame_bury 0
retsub

// get_profile
getprofile_3:
proto 1 1
bytec_0 // ""
frame_dig -1
box_len
store 9
store 8
load 9
// Not Exist
assert
frame_dig -1
box_get
store 11
store 10
load 11
assert
load 10
frame_bury 0
retsub

// remove_profile
removeprofile_4:
proto 0 1
intc_0 // 0
txn Sender
box_len
store 14
store 13
load 14
// Not Exist
assert
txn Sender
box_del
pop
bytec_1 // "g_counter"
bytec_1 // "g_counter"
app_global_get
intc_1 // 1
-
app_global_put
bytec_3 // "g_fee"
app_global_get
intc 5 // 500000
-
store 12
global CurrentApplicationAddress
balance
load 12
>
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
load 12
itxn_field Amount
txn Sender
itxn_field Receiver
global CurrentApplicationAddress
itxn_field Sender
global MinTxnFee
itxn_field Fee
itxn_submit
intc_1 // 1
!
!
frame_bury 0
retsub

// update_fee
updatefee_5:
proto 1 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
frame_dig -1
intc 5 // 500000
>
assert
bytec_3 // "g_fee"
frame_dig -1
app_global_put
retsub

// update
update_6:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_UPDATABLE // TMPL_UPDATABLE
// Check app is updatable
assert
retsub

// delete
delete_7:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
global CurrentApplicationAddress
balance
intc_3 // 100000
>
bz delete_7_l2
callsub withdrawfunds_8
delete_7_l2:
retsub

// withdraw_funds
withdrawfunds_8:
proto 0 0
global CurrentApplicationAddress
balance
intc_3 // 100000
>
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
txn Sender
itxn_field Receiver
global CurrentApplicationAddress
balance
intc_3 // 100000
-
itxn_field Amount
itxn_submit
retsub

// hello
hello_9:
proto 1 1
bytec_0 // ""
pushbytes 0x48656c6c6f2c20 // "Hello, "
frame_dig -1
extract 2 0
concat
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// init_profile_caster
initprofilecaster_10:
proto 0 0
intc_0 // 0
dup
bytec_0 // ""
dupn 2
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txna ApplicationArgs 3
frame_bury 4
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub initprofile_1
frame_bury 0
bytec_2 // 0x151f7c75
bytec 4 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// update_profile_caster
updateprofilecaster_11:
proto 0 0
bytec_0 // ""
dupn 2
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
frame_dig 1
frame_dig 2
callsub updateprofile_2
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// get_profile_caster
getprofilecaster_12:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub getprofile_3
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// remove_profile_caster
removeprofilecaster_13:
proto 0 0
intc_0 // 0
callsub removeprofile_4
frame_bury 0
bytec_2 // 0x151f7c75
bytec 4 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// update_fee_caster
updatefeecaster_14:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub updatefee_5
retsub

// hello_caster
hellocaster_15:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub hello_9
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub